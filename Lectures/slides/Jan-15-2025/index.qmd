---
title: "Diffusion of adaptations via social learning"
subtitle: "Part I: the Legacy-Adaptive and Legacy-Adaptive-Legacy contagion models"
author: "Dr. Matthew A. Turner, PhD"
institution: "Department of Human Behavioral Sciences, Stanford Doerr School of Sustainability"
date: "1/13/2025"
format: 
  revealjs:
    html-math-method: mathjax
smaller: true
incremental: true
code-fold: true
fig-cap-location: bottom
editor: 
  markdown: 
    wrap: 72
---

## Legacy-adaptive (LA) model

Recall the discrete recursion formula for the legacy-adaptive model is

$$
A_{t+1} = A_t + \alpha A_t (1 - \frac{A}{N})
$$

![](images/LA.png){fig-align="center" width="300"}

## Coding the legacy-adaptive model

In the code below, note we use `tmax` for $T$ because `T` is a built-in
variable name that stands for logical `TRUE`.

## 

```{r setup, include=FALSE}
library(tibble)
library(dplyr)
library(ggplot2)
library(ggforce)
library(igraph)
library(forcats)
library(netrankr)
library(magrittr)
```

```{r}
#| echo: true

la_recursion <- function(N, A0, alpha, tmax) {
  A_return <- numeric(N+1)  # Create output time series vector.
  # Set current A_t to be A_0
  At <- A0
  A_return[1] <- At
  # Iterate 
  for (t in 1:N) {
    # Anext is code for A_{t+1}
    Anext <- At + (alpha * At * (1 - (At/N)))
    A_return[t + 1] <- Anext
    At <- Anext
  }
  return (A_return)
}
```

## Analyzing the legacy-adaptive model

Let's compare the LA model output for two values of the adoption rate,
$\alpha=0.2,0.8.$

```{r}
#| echo: true

N <- 100
A0 <- 5
alpha <- 0.2
tmax <- 100
tvec <- 0:100
Avec_low_alpha <- la_recursion(N, A0, alpha, tmax)

alpha <- 0.8
Avec_high_alpha <- la_recursion(N, A0, alpha, tmax)

adopt_tbl <- tibble(timestep = rep(tvec, 2), 
                    alpha = c(rep(0.2, length(tvec)), rep(0.8, length(tvec))),
                    A = c(Avec_low_alpha, Avec_high_alpha))
                              
```

## Legacy-adaptive-legacy (LAL) model

*Need to subtract the fraction of those doing* $A$ who regress to do $L$
with probability $\delta$.

$$
A_{t+1} = A_t + \alpha A_t (1 - \frac{A_t}{N}) - \delta A_t
$$

![](images/LAL.png){fig-align="center" width="200"}

## Formal analysis of the LAL model

-   First, consider what happens at $t\approx0$ to calculate whether
    adaptation will spread

-   Second, calculate the equilibrium as $t\to\infty$, denoted
    $A_\infty$. This is the expected number of people doing $A$ once the
    adaptation becomes established.

## A first look at networks via Medicis

```{r}
#| label: fig-florentine-network
#| echo: true
#| fig-cap: "Florentine marriage network where edges represent marriages between families (node labels)."
#| 

data("florentine_m")
# Delete Pucci family (isolated)
florentine_m <- delete_vertices(florentine_m, which(degree(florentine_m) == 0))

# plot the graph
set.seed(111)
plot(florentine_m,
  vertex.label.cex = .9,
  vertex.size = 20,
  vertex.label.color = "black",
  vertex.color = "white",
  vertex.frame.color = "gray"
)
```
